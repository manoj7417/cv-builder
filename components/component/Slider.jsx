/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/AMT89uV5SNr
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client";
import Link from "next/link";
import Image from "next/image";
import { Button } from "@/components/ui/button";
import {
  CarouselItem,
  CarouselContent,
  CarouselPrevious,
  CarouselNext,
  Carousel,
} from "@/components/ui/carousel";
import { FaUserCog, FaUserGraduate } from "react-icons/fa";
import {
  MdOutlineDesignServices,
  MdOutlineSettingsSuggest,
} from "react-icons/md";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { IoIosStar } from "react-icons/io";
import { AuthContext } from "@/app/context/AuthContext";
import { useEffect, useState } from "react";
import ImageCarousel from "./ImageCarousel";
import { ImSpinner8 } from "react-icons/im";
import { GetTokens } from "@/app/actions";
import { createNewResume } from "@/app/pages/api/api";
import { useRouter } from "next/navigation";
import { useResumeStore } from "@/app/store/ResumeStore";
import { useUserStore } from "@/app/store/UserStore";
import { toast } from "react-toastify";

export const templateType = {
  free: "Free",
  premium: "Premium",
  dummy: "Dummy",
};

const templatesData = [
  {
    name: "Template3",
    src: "/Template3.png",
    alt: "Template3.png",
    type: templateType.free,
  },
  {
    name: "Template5",
    src: "/Template5.png",
    alt: "Template5.png",
    type: templateType.dummy,
  },
  {
    name: "Template4",
    src: "/Template4.png",
    alt: "Template4.png",
    type: templateType.premium,
  },
  {
    name: "Template6",
    src: "/Template6.png",
    alt: "Template6.png",
    type: templateType.dummy,
  },
  {
    name: "Template1",
    src: "/Template1.png",
    alt: "Template1.png",
    type: templateType.premium,
  },
  {
    name: "Template7",
    src: "/Template7.png",
    alt: "Template7.png",
    type: templateType.dummy,
  },
  {
    name: "Template8",
    src: "/Template8.png",
    alt: "Template8.png",
    type: templateType.dummy,
  },
  {
    name: "Template9",
    src: "/Template9.png",
    alt: "Template9.png",
    type: templateType.premium,
  },
  {
    name: "Template3",
    src: "/10.png",
    alt: "10.png",
    type: templateType.dummy,
  },
  {
    name: "Template3",
    src: "/11.png",
    alt: "11.png",
    type: templateType.dummy,
  },
  {
    name: "Template3",
    src: "/resume-temp-example.png",
    alt: "resume-temp-example.png",
    type: templateType.dummy,
  },
  {
    name: "Template3",
    src: "/3.png",
    alt: "3.png",
    type: templateType.dummy,
  },
  {
    name: "Template3",
    src: "/4.png",
    alt: "4.png",
    type: templateType.dummy,
  },
  {
    name: "Template3",
    src: "/5.png",
    alt: "5.png",
    type: templateType.dummy,
  },
  {
    name: "Template3",
    src: "/6.png",
    alt: "6.png",
    type: templateType.dummy,
  },
  {
    name: "Template3",
    src: "/Template3.png",
    alt: "Template3.png",
    type: templateType.free,
  },
  {
    name: "Template5",
    src: "/Template5.png",
    alt: "Template5.png",
    type: templateType.dummy,
  },
  {
    name: "Template4",
    src: "/Template4.png",
    alt: "Template4.png",
    type: templateType.premium,
  },
  {
    name: "Template6",
    src: "/Template6.png",
    alt: "Template6.png",
    type: templateType.dummy,
  },
  {
    name: "Template1",
    src: "/Template1.png",
    alt: "Template1.png",
    type: templateType.premium,
  },
  {
    name: "Template7",
    src: "/Template7.png",
    alt: "Template7.png",
    type: templateType.dummy,
  }
]




// const Carousel1 = [
//   {
//     name: "Template3",
//     src: "/Template3.png",
//     alt: "Template3.png",
//     type: templateType.free,
//   },
//   {
//     name: "Template5",
//     src: "/Template5.png",
//     alt: "Template5.png",
//     type: templateType.dummy,
//   },
//   {
//     name: "Template4",
//     src: "/Template4.png",
//     alt: "Template4.png",
//     type: templateType.premium,
//   },
//   {
//     name: "Template6",
//     src: "/Template6.png",
//     alt: "Template6.png",
//     type: templateType.dummy,
//   },
//   {
//     name: "Template1",
//     src: "/Template1.png",
//     alt: "Template1.png",
//     type: templateType.premium,
//   },
// ];

// const Carousel2 = [
//   {
//     name: "Template7",
//     src: "/Template7.png",
//     alt: "Template7.png",
//     type: templateType.dummy,
//   },
//   {
//     name: "Template8",
//     src: "/Template8.png",
//     alt: "Template8.png",
//     type: templateType.dummy,
//   },
//   {
//     name: "Template9",
//     src: "/Template9.png",
//     alt: "Template9.png",
//     type: templateType.premium,
//   },
//   {
//     name: "Template3",
//     src: "/10.png",
//     alt: "10.png",
//     type: templateType.dummy,
//   },
//   {
//     name: "Template3",
//     src: "/11.png",
//     alt: "11.png",
//     type: templateType.dummy,
//   },
// ];

// const Carousel3 = [
//   {
//     name: "Template3",
//     src: "/resume-temp-example.png",
//     alt: "resume-temp-example.png",
//     type: templateType.dummy,
//   },
//   {
//     name: "Template3",
//     src: "/3.png",
//     alt: "3.png",
//     type: templateType.dummy,
//   },
//   {
//     name: "Template3",
//     src: "/4.png",
//     alt: "4.png",
//     type: templateType.dummy,
//   },
//   {
//     name: "Template3",
//     src: "/5.png",
//     alt: "5.png",
//     type: templateType.dummy,
//   },
//   {
//     name: "Template3",
//     src: "/6.png",
//     alt: "6.png",
//     type: templateType.dummy,
//   },
// ];

export default function Slider() {
  const [userState, setUserState] = useState({});
  const [loading, setIsLoading] = useState(false);
  const createResume = useUserStore((state) => state.createResume);
  const replaceResumeData = useResumeStore((state) => state.replaceResumeData);
  const router = useRouter();


  const handleCreateCV = async (template) => {
    const { accessToken } = await GetTokens();
  
    if (!accessToken) {
      toast("Please login to use this template");
      router.push("/login");
      setIsLoading(false);
      return;
    }
    setIsLoading(true);
    try {
      const response = await createNewResume(accessToken.value, template);
      if (response.data.data) {
        createResume(response.data.data);
        replaceResumeData(response.data.data);
        router.push("/builder");
      }
    } catch (error) {
      console.log(error);
    } finally {
      setIsLoading(false);
    }
  };


  useEffect(() => {
    const user = JSON.parse(localStorage.getItem("userState"));
    if (user) {
      setUserState(user.userdata);
    }
  }, []);


  return (
    <div className="w-full mx-auto px-4 py-12 md:py-16 lg:py-24 bg-gradient-to-b from-[#e4f5fc] to-[white] rounded-2xl">
      <div className="container mx-auto mb-10 ">
        <h2 className="mb-8 text-3xl text-[#0D3572] font-extrabold tracking-tight text-center md:text-4xl">
          Creating CVs that Reflect
          <br />
          <span className="flex text-[#2C98CA] text-5xl justify-center">Perfection
            <Image src="/Vector.svg" height={37} width={39} /> </span>
        </h2>
        <p className="text-center max-w-4xl mx-auto text-[#7C7C7C]">
        Explore unlimited possibilities with the power of a precision-crafted CV by creating one that aligns with your Professional Profile, employing our customised Curriculum Vitae templates.
        </p>

        {/* <div className="flex lg:flex-row flex-col justify-center lg:gap-8 gap-2 mt-20">
          <div className="flex flex-col items-center flex-1 p-5 rounded-2xl">
            <FaUserCog className="h-14 w-14 bg-indigo-500 rounded-full text-white p-2 " />

            <p className="text-base mt-2 text-center">
              CV Templates Crafted by Domain Experts
            </p>
          </div>
          <div className="flex flex-col items-center flex-1 p-5 rounded-2xl">
            <MdOutlineDesignServices className="h-14 w-14 bg-indigo-500 rounded-full text-white p-2" />
            <p className="text-base mt-2 text-center">
              Customized UK CV Format Template
            </p>
          </div>
          <div className="flex flex-col items-center flex-1 p-5 rounded-2xl">
            <MdOutlineSettingsSuggest className="h-14 w-14 bg-indigo-500 rounded-full text-white p-2" />
            <p className="text-base mt-2 text-center">
              Build a CV with Personalized Suggestions
            </p>
          </div>
        </div> */}
        <div className="mt-10 max-w-7xl flex flex-wrap gap-5 mx-auto justify-center items-center h-full">
          {
            templatesData?.map((item, index) => (
              <div
              className="group relative overflow-hidden rounded-lg shadow-lg px-3 py-2 bg-gradient-to-t from-[#8181b9] to-[#dcecff]"
              key={index}
            >
              {item.type === templateType.premium && (
                <div className="card_box">
                  <span></span>
                </div>
              )}
              <Image
                alt={item.alt}
                className="h-full w-auto object-cover transition-all duration-300 group-hover:scale-105"
                src={item.src}
                height={128}
                width={128}
              />

              <div className="absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 opacity-0 transition-opacity duration-300 group-hover:opacity-100" style={{
                zIndex:"1"
              }}>
                <Button
                  className="inline-flex items-center justify-center rounded-md bg-[#0EA5E9] px-4 text-[12px] font-medium text-white shadow transition-colors hover:bg-[#0284C7] focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:opacity-100 disabled:bg-[#82cdf0]"
                  onClick={() => handleCreateCV(item.name)}
                  disabled={loading}
                >
                  {loading ? (
                    <>
                      <ImSpinner8 className=" animate-spin mr-2" />
                      Loading
                    </>
                  ) : (
                    "Try Now"
                  )}
                </Button>
              </div>
            </div>
            ))
          }
        </div>
      </div>


      {/* <div className="relative w-full">
        <Carousel autoPlay className="mx-auto max-w-full" interval={5000}>
          <CarouselContent>
            <ImageCarousel data={Carousel1} userState={userState} />
            <ImageCarousel data={Carousel2} userState={userState} />
            <ImageCarousel data={Carousel3} userState={userState} />
          </CarouselContent>
          <CarouselPrevious className="absolute left-4 top-1/2 -translate-y-1/2">
            <ChevronLeftIcon className="h-6 w-6" />
          </CarouselPrevious>
          <CarouselNext className="absolute right-4 top-1/2 -translate-y-1/2">
            <ChevronRightIcon className="h-6 w-6" />
          </CarouselNext>
        </Carousel>
      </div> */}
    </div>
  );
}

function ChevronLeftIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="white"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m15 18-6-6 6-6" />
    </svg>
  );
}

function ChevronRightIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="white"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m9 18 6-6-6-6" />
    </svg>
  );
}
